#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <set>

int gg[9] = {0,
            15,
            15*15,
            15*15*14,
            15*15*14*13,
            15*15*14*13*12,
            15*15*14*13*12*11,
            15*15*14*13*12*11*10,
            15*15*14*13*12*11*10*9};
int T = gg[1] + gg[2] + gg[3] + gg[4] + gg[5] + gg[6] + gg[7] + gg[8];

int main() {
    //printf("%d\n", T);
    int n;
    scanf("%d", &n);
    std::set<int> used;
    n = T - n;
    int ws;
    int agg = 0;
    for (ws = 1; ws <= 8; ws++) {
        agg += gg[ws];
        if (agg > n) {
            break;
        }
    }
    for (int i = 1; i < ws; i++) {
        n -= gg[i];
    }
    int res[9];
    int sw = n / (gg[ws] / 15) + 1;
    res[0] = sw;
    used.insert(sw);
    int yc = 15;
    int qd = gg[ws] / 15;
    n -= (sw - 1) * (gg[ws] / 15);
    for (int wz = 1; wz < ws; wz++) {
        qd /= yc;
        yc--;
        int cw = n / qd + 1;
        int cnt = 0;
        int zcw;
        for (int i = 0; i < 16; i++) {
            if (!used.count(i)) {
                cnt++;
            }
            if (cnt == cw) {
                zcw = i;
                break;
            }
        }
        res[wz] = zcw;
        used.insert(zcw);
        n -= (cw - 1) * qd;
    }
    for (int i = 0; i < ws; i++) {
        if (res[i] < 10) {
            printf("%d", res[i]);
        } else {
            printf("%c", res[i] - 10 + 'A');
        }
    }
    printf("\n");
    return 0;
}
